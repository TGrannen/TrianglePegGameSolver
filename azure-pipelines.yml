# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

variables:
- name: webProjectName
  value: TrianglePegGameSolver.Web
- name: buildArtifact
  value: WebApp

stages:
 - stage: Build
   jobs:
   - job: Build
     steps:
      - task: Npm@1
        displayName: 'Running NPM Install'
        inputs:
          command: 'install'
          workingDir: '$(webProjectName)'

      - task: DotNetCoreCLI@2
        displayName: 'Restore App'
        inputs:
          command: 'restore'

      - task: DotNetCoreCLI@2
        displayName: 'Build App'
        inputs:
          command: 'build'
          arguments: '--configuration $(buildConfiguration) --no-restore'

      - task: DotNetCoreCLI@2
        displayName: 'Run Unit Tests'
        inputs:
          command: 'test'
          arguments: '--configuration $(buildConfiguration) --no-restore'

      - task: DotNetCoreCLI@2
        displayName: 'Publish App'
        inputs:
          command: 'publish'
          publishWebProjects: true
          arguments: '--configuration $(buildConfiguration) --no-restore --output $(Build.ArtifactStagingDirectory)/temp'
          zipAfterPublish: false
          modifyOutputPath: false

      - task: CopyFiles@2
        displayName: 'Copy just the necessary files to the artifact staging directory'
        inputs:
          SourceFolder: '$(Build.ArtifactStagingDirectory)/temp/wwwroot'
          Contents: |
            **
            !*.br
            !*.gz
            !**/*.br
            !**/*.gz
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: DeleteFiles@1
        displayName: 'Delete Temp Files'
        inputs:
          SourceFolder: '$(Build.ArtifactStagingDirectory)'
          Contents: 'temp'

      - publish: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Publishing Build Artifacts'
        artifact: $(buildArtifact)

 - stage: Deploy
   jobs:
   - deployment: prod
     displayName: 'Deploy to Production'
     environment: production
     strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureFileCopy@2
              displayName: 'AzureBlob File Copy'
              inputs:
                SourcePath: $(Pipeline.Workspace)/$(buildArtifact)
                azureSubscription: '$(azureSubscription)'
                Destination: AzureBlob
                storage: $(azureStorageAccount)
                ContainerName: '$web'