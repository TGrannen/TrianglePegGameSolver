@using TrianglePegGameSolver.Web.Features.PegBoard.Components
@using TrianglePegGameSolver.Web.Features.PegBoard.Models
@using TrianglePegGameSolver.Domain

@if (Holes != null && Holes.Any())
{
    <svg class="lg:max-h-3xl lg:max-w-3xl" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 750 660">
        <g transform="scale(3)">
            <path stroke="#8f8f8f" fill="#39bda7" d="M10 218 120 0l115 218z"/>
            <circle fill="@GetColor(Holes[0].Style)" stroke="#8f8f8f" cx="120" cy="30" r="8"/>
            <circle fill="@GetColor(Holes[1].Style)" stroke="#8f8f8f" cx="100" cy="69" r="8"/>
            <circle fill="@GetColor(Holes[2].Style)" stroke="#8f8f8f" cx="140" cy="69" r="8"/>
            <circle fill="@GetColor(Holes[3].Style)" stroke="#8f8f8f" cx="80" cy="109" r="8"/>
            <circle fill="@GetColor(Holes[4].Style)" stroke="#8f8f8f" cx="120" cy="109" r="8"/>
            <circle fill="@GetColor(Holes[5].Style)" stroke="#8f8f8f" cx="160" cy="109" r="8"/>
            <circle fill="@GetColor(Holes[6].Style)" stroke="#8f8f8f" cx="60" cy="148" r="8"/>
            <circle fill="@GetColor(Holes[7].Style)" stroke="#8f8f8f" cx="100" cy="148" r="8"/>
            <circle fill="@GetColor(Holes[8].Style)" stroke="#8f8f8f" cx="140" cy="148" r="8"/>
            <circle fill="@GetColor(Holes[9].Style)" stroke="#8f8f8f" cx="180" cy="148" r="8"/>
            <circle fill="@GetColor(Holes[10].Style)" stroke="#8f8f8f" cx="40" cy="188" r="8"/>
            <circle fill="@GetColor(Holes[11].Style)" stroke="#8f8f8f" cx="80" cy="188" r="8"/>
            <circle fill="@GetColor(Holes[12].Style)" stroke="#8f8f8f" cx="120" cy="188" r="8"/>
            <circle fill="@GetColor(Holes[13].Style)" stroke="#8f8f8f" cx="160" cy="188" r="8"/>
            <circle fill="@GetColor(Holes[14].Style)" stroke="#8f8f8f" cx="200" cy="188" r="8"/>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="50" x="116">1</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="90" x="95">2</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="90" x="134">3</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="130" x="75">4</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="130" x="116">5</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="130" x="156">6</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="170" x="55">7</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="170" x="96">8</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="170" x="137">9</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="170" x="172">10</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="212" x="30">11</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="212" x="72">12</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="212" x="113">13</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="212" x="152">14</text>
            <text class="@(!ShowNumbers ? "hidden" : "") select-none" y="212" x="192">15</text>

            <ellipse ry="20" rx="16" id="svg_0" cx="120" cy="34" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[0].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_1" cx="100" cy="73" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[1].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_2" cx="140" cy="73" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[2].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_3" cx="80" cy="113" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[3].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_4" cx="120" cy="113" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[4].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_5" cx="160" cy="113" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[5].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_6" cx="60" cy="152" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[6].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_7" cx="100" cy="152" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[7].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_8" cx="140" cy="152" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[8].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_9" cx="180" cy="152" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[9].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_10" cx="40" cy="192" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[10].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_11" cx="80" cy="192" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[11].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_12" cx="120" cy="192" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[12].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_13" cx="160" cy="192" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[13].Hole)"></ellipse>
            <ellipse ry="20" rx="16" id="svg_14" cx="200" cy="192" class="@(!AllowClicks ? "hidden" : "") cursor-pointer select-none" fill="@_clickColor" @onclick="x => PegClicked(Holes[14].Hole)"></ellipse>
        </g>

    </svg>
}

@code{

    [Parameter]
    public bool ShowNumbers { get; set; } = true;

    [Parameter]
    public bool AllowClicks { get; set; } = true;

    [Parameter]
    public List<PegHoleDetail> Holes { get; set; }

    [Parameter]
    public EventCallback<PegHole> OnClick { get; set; }

    private async Task PegClicked(PegHole hole)
    {
        if (AllowClicks)
        {
            await OnClick.InvokeAsync(hole);
        }
    }

    private string GetColor(PegStyle pegStyle)
    {
        return pegStyle switch
        {
            PegStyle.Filled => _pegColor,
            PegStyle.Empty => _pegEmptyColor,
            PegStyle.ToBeRemoved => _pegRemovedColor,
            PegStyle.Selected => _pegSelectedColor,
            _ => throw new ArgumentOutOfRangeException()
            };
    }

    string _pegColor = "#FFE7A2";
    string _pegEmptyColor = "#CECECE";
    string _pegRemovedColor = "#c33a3a";
    string _pegSelectedColor = "#4f52b9";
    string _clickColor = "#FCFCFC00";

    private async Task Clicked()
    {
        await OnClick.InvokeAsync();
    }

}