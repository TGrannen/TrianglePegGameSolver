@using TrianglePegGameSolver.Web.Features.PegBoard.Components
@using TrianglePegGameSolver.Web.Features.PegBoard.Models
@using TrianglePegGameSolver.Domain

<svg xmlns="http://www.w3.org/2000/svg" viewBox="-5 -5 50 50">
    <polygon stroke="#8f8f8f" points="2.4281105697155,30.363564863801003 17.919604510068893,0.5228753238916397 35.13237878680229,30.363564863801003 " fill="#39bda7" id="svg_1" />
    <g>
        <Peg PegStyle="PegStyle.Filled" X="120" Y="30" OnClick="x => PegClicked(Board.Holes[0])"></Peg>

        <Peg PegStyle="PegStyle.Filled" X="100" Y="69" OnClick="x => PegClicked(Board.Holes[1])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="140" Y="69" OnClick="x => PegClicked(Board.Holes[2])"></Peg>

        <Peg PegStyle="PegStyle.Filled" X="80" Y="109" OnClick="x => PegClicked(Board.Holes[3])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="120" Y="109" OnClick="x => PegClicked(Board.Holes[4])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="160" Y="109" OnClick="x => PegClicked(Board.Holes[5])"></Peg>

        <Peg PegStyle="PegStyle.Filled" X="60" Y="148" OnClick="x => PegClicked(Board.Holes[6])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="100" Y="148" OnClick="x => PegClicked(Board.Holes[7])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="140" Y="148" OnClick="x => PegClicked(Board.Holes[8])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="180" Y="148" OnClick="x => PegClicked(Board.Holes[9])"></Peg>

        <Peg PegStyle="PegStyle.Filled" X="40" Y="188" OnClick="x => PegClicked(Board.Holes[10])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="80" Y="188" OnClick="x => PegClicked(Board.Holes[11])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="120" Y="188" OnClick="x => PegClicked(Board.Holes[12])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="160" Y="188" OnClick="x => PegClicked(Board.Holes[13])"></Peg>
        <Peg PegStyle="PegStyle.Filled" X="200" Y="188" OnClick="x => PegClicked(Board.Holes[14])"></Peg>
    </g>
</svg>

@code{
    [Parameter]
    public Domain.PegBoard Board { get; set; }

    [Parameter]
    public PegMove Move { get; set; }

    [Parameter]
    public EventCallback<PegHole> OnClick { get; set; }

    private async Task PegClicked(PegHole hole)
    {
        await OnClick.InvokeAsync(hole);
    }

}