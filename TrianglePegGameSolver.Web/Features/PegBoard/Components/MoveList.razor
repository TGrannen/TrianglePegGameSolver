@using TrianglePegGameSolver.Domain
<div>
    <h3 class="text-lg leading-6 font-medium text-gray-900 mb-2">
        Moves
    </h3>
    <ul class="border border-gray-200 rounded-md divide-y divide-gray-200">
        <li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm @BgClass(1)">
            <div class="w-0 flex-1 flex items-center">
                <span>1.</span>
                <span class="ml-2 flex-1 w-0 truncate">
                    Remove 1
                </span>
            </div>
        </li>
        @foreach (var move in Moves.Select((x, i) => new { Move = x, Index = i + 2 }))
        {
            <li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm @BgClass(move.Index)">
                <div class="w-0 flex-1 flex items-center">
                    <span>@(move.Index).</span>
                    <span class="ml-2 flex-1 w-0 truncate">
                        Move @move.Move.From.Number to @move.Move.To.Number
                    </span>
                </div>
            </li>
        }
    </ul>
</div>

@code
{
    [Parameter]
    public List<PegMove> Moves { get; set; } = new List<PegMove>();

    private string BgClass(int i)
    {
        return i % 2 == 0 ? "" : "bg-gray-100";
    }
}