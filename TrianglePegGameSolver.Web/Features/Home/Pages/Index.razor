@page "/"
@page "/Solve"
@using TrianglePegGameSolver.Web.Features.PegBoard.Components
@using MediatR
@using TrianglePegGameSolver.Application.Solver.Queries.SolvePegBoard
@using TrianglePegGameSolver.Domain
@using PegBoard = TrianglePegGameSolver.Domain.PegBoard

@inject IMediator _mediator

<h1 class="text-3xl font-bold text-gray-900">
    Solve
</h1>
<h3 class="text-xl text-gray-900">
    Click any peg to show the solution
</h3>

<div class="flex flex-col lg:flex-row">
    <div class="w-1/2 self-center lg:w-3/4">
        <PegBoard Board="_board" OnClick="PegClicked"></PegBoard>
    </div>
    <div class="lg:w-1/4">
        <MoveList Moves="_moves"></MoveList>
    </div>
</div>

@code
{
    PegBoard _board = new PegBoard();
    List<PegMove> _moves = new List<PegMove>();

    private async Task PegClicked(PegHole hole)
    {
        hole.Filled = false;
        await SolveBoard();
    }

    private async Task SolveBoard()
    {
        var result = await _mediator.Send(new SolvePegBoardQuery { PegBoard = _board });
        _moves = result.Moves.Select(x => x.Move).ToList();
    }

}